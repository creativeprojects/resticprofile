<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Schedules on resticprofile</title><link>https://creativeprojects.github.io/resticprofile/schedules/</link><description>Recent content in Schedules on resticprofile</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Mon, 16 May 2022 20:13:32 +0100</lastBuildDate><atom:link href="https://creativeprojects.github.io/resticprofile/schedules/index.xml" rel="self" type="application/rss+xml"/><item><title>Schedule Configuration</title><link>https://creativeprojects.github.io/resticprofile/schedules/configuration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://creativeprojects.github.io/resticprofile/schedules/configuration/</guid><description>The schedule configuration consists of a few parameters which can be added on each profile:
toml yaml hcl json [profile.backup] schedule = &amp;#34;*:00,30&amp;#34; schedule-permission = &amp;#34;system&amp;#34; schedule-priority = &amp;#34;background&amp;#34; schedule-log = &amp;#34;profile-backup.log&amp;#34; schedule-lock-mode = &amp;#34;default&amp;#34; schedule-lock-wait = &amp;#34;15m30s&amp;#34; profile: backup: schedule: &amp;#39;*:00,30&amp;#39; schedule-permission: system schedule-priority: background schedule-log: profile-backup.log schedule-lock-mode: default schedule-lock-wait: 15m30s &amp;#34;profile&amp;#34; &amp;#34;backup&amp;#34; { &amp;#34;schedule&amp;#34; = &amp;#34;*:00,30&amp;#34; &amp;#34;schedule-permission&amp;#34; = &amp;#34;system&amp;#34; &amp;#34;schedule-priority&amp;#34; = &amp;#34;background&amp;#34; &amp;#34;schedule-log&amp;#34; = &amp;#34;profile-backup.log&amp;#34; &amp;#34;schedule-lock-mode&amp;#34; = &amp;#34;default&amp;#34; &amp;#34;schedule-lock-wait&amp;#34; = &amp;#34;15m30s&amp;#34; } { &amp;#34;profile&amp;#34;: { &amp;#34;backup&amp;#34;: { &amp;#34;schedule&amp;#34;: &amp;#34;*:00,30&amp;#34;, &amp;#34;schedule-permission&amp;#34;: &amp;#34;system&amp;#34;, &amp;#34;schedule-priority&amp;#34;: &amp;#34;background&amp;#34;, &amp;#34;schedule-log&amp;#34;: &amp;#34;profile-backup.</description></item><item><title>Schedule Commands</title><link>https://creativeprojects.github.io/resticprofile/schedules/commands/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://creativeprojects.github.io/resticprofile/schedules/commands/</guid><description>resticprofile accepts these internal commands:
schedule unschedule status All internal commands either operate on the profile selected by --name, on the profiles selected by a group, or on all profiles when the flag --all is passed.
Examples:
$ resticprofile --name profile schedule $ resticprofile --name group schedule $ resticprofile schedule --all Please note, schedules are always independent of each other no matter whether they have been created with --all, by group or from a single profile.</description></item><item><title>Schedule Examples</title><link>https://creativeprojects.github.io/resticprofile/schedules/examples/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://creativeprojects.github.io/resticprofile/schedules/examples/</guid><description>Examples of scheduling commands under Windows If you create a task with user permission under Windows, you will need to enter your password to validate the task. It&amp;rsquo;s a requirement of the task scheduler. I&amp;rsquo;m inviting you to review the code to make sure I&amp;rsquo;m not emailing your password to myself. Seriously you shouldn&amp;rsquo;t trust anyone.
Example of the schedule command under Windows (with git bash):
$ resticprofile -c examples/windows.yaml -n self schedule Analyzing backup schedule 1/2 ================================= Original form: Mon.</description></item><item><title>Systemd</title><link>https://creativeprojects.github.io/resticprofile/schedules/systemd/</link><pubDate>Mon, 16 May 2022 20:11:58 +0100</pubDate><guid>https://creativeprojects.github.io/resticprofile/schedules/systemd/</guid><description>systemd is a common service manager in use by many Linux distributions. resticprofile has the ability to create systemd timer and service files. systemd can be used in place of cron to schedule backups.
User systemd units are created under the user&amp;rsquo;s systemd profile (~/.config/systemd/user).
System units are created in /etc/systemd/system
systemd calendars resticprofile uses systemd OnCalendar format to schedule events.
Testing systemd calendars can be done with the systemd-analyze application.</description></item><item><title>Launchd</title><link>https://creativeprojects.github.io/resticprofile/schedules/launchd/</link><pubDate>Mon, 16 May 2022 20:13:32 +0100</pubDate><guid>https://creativeprojects.github.io/resticprofile/schedules/launchd/</guid><description>launchd is the service manager on macOS. resticprofile can schedule a profile via a user agent or a daemon in launchd.
User agent A user agent is generated when you set schedule-permission to user.
It consists of a plist file in the folder ~/Library/LaunchAgents:
A user agent mostly runs with the privileges of the user. But if you backup some specific files, like your contacts or your calendar for example, you will need to give more permissions to resticprofile and restic.</description></item></channel></rss>