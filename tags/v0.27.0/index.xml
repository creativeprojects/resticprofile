<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>V0.27.0 :: Tag :: resticprofile</title><link>https://creativeprojects.github.io/resticprofile/tags/v0.27.0/index.html</link><description/><generator>Hugo</generator><language>en-gb</language><atom:link href="https://creativeprojects.github.io/resticprofile/tags/v0.27.0/index.xml" rel="self" type="application/rss+xml"/><item><title>Priority</title><link>https://creativeprojects.github.io/resticprofile/configuration/priority/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://creativeprojects.github.io/resticprofile/configuration/priority/index.html</guid><description>By default, restic is running with the default priority. It means it will get equal share of the resources with other processes.
You can lower the priority of restic to avoid slowing down other processes. This is especially useful when you run restic on a production server.
Nice You can use these values for the priority parameter:
String value “nice” equivalent on unixes Notes Idle 19 Background 1 15 This mode is NOT recommended on Windows 11 1 Low 10 Normal 0 Default priority when unspecified High -10 Highest -20 IO Nice This setting is only available on Linux. It allows you to set the disks IO priority of restic.</description></item><item><title>User schedule in container</title><link>https://creativeprojects.github.io/resticprofile/schedules/non-root-schedule-in-container/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://creativeprojects.github.io/resticprofile/schedules/non-root-schedule-in-container/index.html</guid><description>You can schedule your backups with resticprofile by running crond inside a container.
This configuration uses supercronic to run scheduled backups as a non-root user.
You can create a container with this modified version from the official image:
FROM alpine:latest LABEL org.opencontainers.image.documentation="https://creativeprojects.github.io/resticprofile/" LABEL org.opencontainers.image.source="https://github.com/creativeprojects/resticprofile" ARG ARCH=amd64 ENV TZ=Etc/UTC COPY build/restic-${ARCH} /usr/bin/restic COPY build/rclone-${ARCH} /usr/bin/rclone COPY resticprofile /usr/bin/resticprofile RUN apk add --no-cache openssh-client-default curl tzdata ca-certificates supercronic &amp;&amp; \ chmod +x /usr/bin/restic /usr/bin/rclone /usr/bin/resticprofile &amp;&amp; \ adduser -D -h /resticprofile resticprofile &amp;&amp; \ mkdir -p /resticprofile &amp;&amp; \ touch /resticprofile/crontab &amp;&amp; \ chown -R resticprofile:resticprofile /resticprofile VOLUME /resticprofile WORKDIR /resticprofile ENTRYPOINT ["resticprofile"] CMD ["--help"]Here’s a docker-compose example loading configuration from a .env file:</description></item></channel></rss>