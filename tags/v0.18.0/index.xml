<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>V0.18.0 :: Tag :: resticprofile</title><link>https://creativeprojects.github.io/resticprofile/tags/v0.18.0/index.html</link><description/><generator>Hugo</generator><language>en-gb</language><lastBuildDate>Mon, 16 May 2022 19:46:52 +0100</lastBuildDate><atom:link href="https://creativeprojects.github.io/resticprofile/tags/v0.18.0/index.xml" rel="self" type="application/rss+xml"/><item><title>Includes</title><link>https://creativeprojects.github.io/resticprofile/configuration/include/index.html</link><pubDate>Mon, 02 May 2022 20:00:00 +0200</pubDate><guid>https://creativeprojects.github.io/resticprofile/configuration/include/index.html</guid><description>The configuration may be split into multiple files by adding includes = "glob-pattern" to the main configuration file. E.g. the following profiles.conf loads configurations from conf.d and profiles.d:
​ toml yaml hcl json version = "1" # Includes includes = ["conf.d/*.conf", "profiles.d/*.yaml", "profiles.d/*.toml"] # Defaults [global] initialize = true version: "1" includes: - "conf.d/*.conf" - "profiles.d/*.yaml" - "profiles.d/*.toml" global: initialize: true includes = ["conf.d/*.conf", "profiles.d/*.yaml", "profiles.d/*.toml"] global { initialize = true } { "version": "1", "includes": [ "conf.</description></item><item><title>Copy command</title><link>https://creativeprojects.github.io/resticprofile/configuration/copy/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://creativeprojects.github.io/resticprofile/configuration/copy/index.html</guid><description>Special case for the copy command section The copy command needs two repositories (and quite likely 2 different set of keys). You can configure a copy section like this:
​ toml yaml hcl version = "1" [default] initialize = false repository = "/backup/original" password-file = "key" [default.copy] initialize = true repository = "/backup/copy" password-file = "other_key" version: "1" default: initialize: false repository: "/backup/original" password-file: key copy: initialize: true repository: "/backup/copy" password-file: other_key default { initialize = false repository = "/backup/original" password-file = "key" copy = { initialize = true repository = "/backup/copy" password-file = "other_key" } } You will note that the secondary repository doesn’t need to have a 2 behind its flags (repository2, password-file2, etc.</description></item><item><title>HTTP Hooks</title><link>https://creativeprojects.github.io/resticprofile/configuration/http_hooks/index.html</link><pubDate>Mon, 16 May 2022 19:46:52 +0100</pubDate><guid>https://creativeprojects.github.io/resticprofile/configuration/http_hooks/index.html</guid><description>Send HTTP messages before and after a job As well as being able to run shell commands, you can now send HTTP messages before, after (success or failure) running a restic command.
The sections that allow sending HTTP hooks are:
backup copy check forget prune Tip You might notice that’s the same sections that can also be scheduled
Each of these commands can send 4 different types of hooks:
send-before send-after send-after-fail send-finally The configuration is the same for each of these 4 types of hooks:</description></item><item><title>Docker</title><link>https://creativeprojects.github.io/resticprofile/installation/docker/index.html</link><pubDate>Sat, 23 Apr 2022 23:58:56 +0100</pubDate><guid>https://creativeprojects.github.io/resticprofile/installation/docker/index.html</guid><description>Using resticprofile from a docker image You can run resticprofile inside a docker container. It is probably the easiest way to install resticprofile (and restic at the same time) and keep it updated.
But be aware that you will need to mount your backup source (and destination if it’s local) as a docker volume. Depending on your operating system, the backup might be slower. Volumes mounted on a mac OS host are well known for being quite slow.</description></item></channel></rss>