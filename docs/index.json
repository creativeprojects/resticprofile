[
  {
    "content": "Introduction Some Chapter title Lorem Ipsum.\n",
    "description": "",
    "tags": null,
    "title": "Installation",
    "uri": "/installation/"
  },
  {
    "content": "Installation via a script Here’s a simple script to download the binary automatically. It works on mac OS X, FreeBSD and Linux:\n$ curl -sfL https://raw.githubusercontent.com/creativeprojects/resticprofile/master/install.sh | sh It should copy resticprofile in a bin directory under your current directory.\nIf you need more control, you can save the shell script and run it manually:\n$ curl -LO https://raw.githubusercontent.com/creativeprojects/resticprofile/master/install.sh $ chmod +x install.sh $ sudo ./install.sh -b /usr/local/bin It will install resticprofile in /usr/local/bin/\nInstallation with homebrew for Linux There’s a Linux homebrew tap for resticprofile:\n$ brew tap creativeprojects/tap $ brew install resticprofile You can also install restic at the same time with --with-restic flag:\n$ brew install resticprofile --with-restic You can test that resticprofile is properly installed (make sure you have restic installed or the test will fail):\n$ brew test resticprofile Upgrading resticprofile installed via homebrew is very easy:\n$ brew update $ brew upgrade resticprofile Note on installing on Linux via Homebrew When testing homebrew after spinning new Linux virtual machines, I noticed resticprofile wouldn’t install without a compiler installed on the machine. Even though resticprofile is distributed as a binary, it looks like homebrew needs access to a compiler.\nDepending on your distribution you will need to install gcc:\n $ sudo yum install gcc $ sudo apt install gcc  ",
    "description": "",
    "tags": null,
    "title": "Linux",
    "uri": "/installation/linux/"
  },
  {
    "content": "Installation with Homebrew There’s a homebrew tap for resticprofile:\n$ brew tap creativeprojects/tap $ brew install resticprofile You can also install restic at the same time with --with-restic flag:\n$ brew install resticprofile --with-restic You can test that resticprofile is properly installed (make sure you have restic installed or the test will fail):\n$ brew test resticprofile Upgrading resticprofile installed via homebrew is very easy:\n$ brew update $ brew upgrade resticprofile Installation via a script Here’s a simple script to download the binary automatically. It works on mac OS X, FreeBSD and Linux:\n$ curl -sfL https://raw.githubusercontent.com/creativeprojects/resticprofile/master/install.sh | sh It should copy resticprofile in a bin directory under your current directory.\nIf you need more control, you can save the shell script and run it manually:\n$ curl -LO https://raw.githubusercontent.com/creativeprojects/resticprofile/master/install.sh $ chmod +x install.sh $ sudo ./install.sh -b /usr/local/bin It will install resticprofile in /usr/local/bin/\n",
    "description": "",
    "tags": null,
    "title": "mac OS X",
    "uri": "/installation/macosx/"
  },
  {
    "content": "Installation using bash You can use a script if you’re using bash in Windows (via WSL, git bash, etc.)\n$ curl -LO https://raw.githubusercontent.com/creativeprojects/resticprofile/master/install.sh $ ./install.sh It will create a bin directory under your current directory and place resticprofile.exe in it.\nManual installation (Windows)  Download the package corresponding to your system and CPU from the release page Once downloaded you need to open the archive and copy the binary file resticprofile (or resticprofile.exe) in your PATH.  ",
    "description": "",
    "tags": null,
    "title": "Windows",
    "uri": "/installation/windows/"
  },
  {
    "content": "Installation using Ansible Installation using Ansible is not streamlined, but here’s the playbook I’m using on my servers\n",
    "description": "",
    "tags": null,
    "title": "Ansible",
    "uri": "/installation/ansible/"
  },
  {
    "content": "Installation from source You can download the source code and compile it, it’s actually very easy! all you need to have on your machine is:\n git (with git-bash on Windows) go compiler GNU Make which is installed by default on many unix boxes. On debian based distributions (Ubuntu included) the package is called build-essential.  To compile from sources:\n$ git clone https://github.com/creativeprojects/resticprofile.git $ cd resticprofile $ make build Your compiled binary (resticprofile or resticprofile.exe) is available in the current folder.\nTo install the binary in your user path:\n$ make install ",
    "description": "",
    "tags": null,
    "title": "Source",
    "uri": "/installation/source/"
  },
  {
    "content": "Once installed, you can easily upgrade resticprofile to the latest release using this command:\n$ resticprofile self-update Please note on versions before 0.10.0, there was an issue with self-updating from linux with ARM processors (like a raspberry pi). This was fixed in version 0.10.0\nresticprofile will check for a new version from GitHub releases and asks you if you want to update to the new version. If you add the flag -q or --quiet to the command line, it will update automatically without asking.\n$ resticprofile --quiet self-update and since version 0.11.0:\n$ resticprofile self-update --quiet ",
    "description": "",
    "tags": null,
    "title": "Upgrade",
    "uri": "/installation/upgrade/"
  },
  {
    "content": "Using resticprofile from a docker image You can run resticprofile inside a docker container. It is probably the easiest way to install resticprofile (and restic at the same time) and keep it updated.\nBut be aware that you will need to mount your backup source (and destination if it’s local) as a docker volume. Depending on your operating system, the backup might be slower. Volumes mounted on a mac OS host are well known for being quite slow.\nBy default, the resticprofile container starts at /resticprofile. So you can feed a configuration this way:\n$ docker run -it --rm -v $PWD/examples:/resticprofile creativeprojects/resticprofile You can list your profiles:\n$ docker run -it --rm -v $PWD/examples:/resticprofile creativeprojects/resticprofile profiles Container host name Each time a container is started, it gets assigned a new random name.\nYou can force a hostname\n in your container:  $ docker run -it --rm -v $PWD:/resticprofile -h my-machine creativeprojects/resticprofile -n profile backup  in your configuration:  [profile] host = \"my-machine\" ",
    "description": "",
    "tags": null,
    "title": "Docker",
    "uri": "/installation/docker/"
  },
  {
    "content": "Shell command line completions are provided for bash and zsh.\nTo load the command completions in shell, use:\n# bash eval \"$(resticprofile completion-script --bash)\"  # zsh eval \"$(resticprofile completion-script --zsh)\" To install them permanently:\n$ resticprofile completion-script --bash \u003e /etc/bash_completion.d/resticprofile $ chmod +x /etc/bash_completion.d/resticprofile ",
    "description": "",
    "tags": null,
    "title": "Shell Completion",
    "uri": "/installation/shell/"
  },
  {
    "content": "",
    "description": "",
    "tags": null,
    "title": "Categories",
    "uri": "/categories/"
  },
  {
    "content": "",
    "description": "",
    "tags": null,
    "title": "Tags",
    "uri": "/tags/"
  }
]
