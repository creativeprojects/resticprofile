<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>resticprofile</title><link>https://creativeprojects.github.io/resticprofile/index.html</link><description>Configuration profiles manager for restic backup
resticprofile is the missing link between a configuration file and restic backup. Creating a configuration file for restic has been discussed before, but seems to be a very low priority right now.
With resticprofile:
You no longer need to remember command parameters and environment variables You can create multiple profiles inside one configuration file A profile can inherit all the options from another profile You can run the forget command before or after a backup (in a section called retention) You can check a repository before or after a backup You can create groups of profiles that will run sequentially You can run shell commands before or after running a profile: useful if you need to mount and unmount your backup disk for example You can run a shell command if an error occurred (at any time) You can send a backup stream via stdin You can start restic at a lower or higher priority (Priority Class in Windows, nice in all unixes) and/or ionice (only available on Linux) It can check that you have enough memory before starting a backup.</description><generator>Hugo</generator><language>en-gb</language><lastBuildDate>Mon, 19 Aug 2024 21:04:06 +0000</lastBuildDate><atom:link href="https://creativeprojects.github.io/resticprofile/index.xml" rel="self" type="application/rss+xml"/><item><title>Installation</title><link>https://creativeprojects.github.io/resticprofile/installation/index.html</link><pubDate>Sat, 23 Apr 2022 23:58:56 +0100</pubDate><guid>https://creativeprojects.github.io/resticprofile/installation/index.html</guid><description> Pre-built binaries Linux mac OS X Windows Ansible Source Upgrade Docker Shell Completion</description></item><item><title>Configuration file</title><link>https://creativeprojects.github.io/resticprofile/configuration/index.html</link><pubDate>Sat, 25 Mar 2023 14:44:47 +0000</pubDate><guid>https://creativeprojects.github.io/resticprofile/configuration/index.html</guid><description>A configuration is a set of profiles. Each profile is in a new section that has the name of the profile. Inside each profile, you can specify different flags for each command. A command definition is in a subsection of the name of the command. ​ toml yaml hcl json [profile_name] [profile_name.backup] profile_name: backup: profile_name { backup = { } } { "profile_name": { "backup": { } } } All the restic flags can be defined in a section.</description></item><item><title>Using resticprofile</title><link>https://creativeprojects.github.io/resticprofile/usage/index.html</link><pubDate>Mon, 16 May 2022 20:26:09 +0100</pubDate><guid>https://creativeprojects.github.io/resticprofile/usage/index.html</guid><description>Here are a few examples how to run resticprofile (using the main example configuration file)
See all snapshots of your default profile:
resticprofileSee all available profiles in your configuration file (and the restic commands where some flags are defined):
resticprofile profiles Profiles available (name, sections, description): root: (backup, copy, forget, retention) self: (backup, check, copy, forget, retention) src: (backup, copy, retention, snapshots) Groups available (name, profiles, description): full-backup: [root, src]Backup root &amp; src profiles (using full-backup group shown earlier)</description></item><item><title>Schedules</title><link>https://creativeprojects.github.io/resticprofile/schedules/index.html</link><pubDate>Mon, 16 May 2022 20:13:32 +0100</pubDate><guid>https://creativeprojects.github.io/resticprofile/schedules/index.html</guid><description>resticprofile is capable of managing scheduled backups for you. Under the hood it’s using:
launchd on macOS X Task Scheduler on Windows systemd where available (Linux and other BSDs) crond as fallback (depends on the availability of a crontab binary) crontab files (low level, with (*) or without (-) user column) On unixes (except macOS) resticprofile is using systemd if available and falls back to crond. On any OS a crond compatible scheduler can be used instead if configured in global / scheduler:</description></item><item><title>Status file</title><link>https://creativeprojects.github.io/resticprofile/status/index.html</link><pubDate>Mon, 16 May 2022 20:19:00 +0100</pubDate><guid>https://creativeprojects.github.io/resticprofile/status/index.html</guid><description>If you need to escalate the result of your backup to a monitoring system, you can definitely use the run-after and run-after-fail scripting.
But sometimes we just need something simple that a monitoring system can regularly check. For that matter, resticprofile can generate a simple JSON file with the details of the latest backup/forget/check command. For example I have a Zabbix agent checking this file once a day, and so you can hook up any monitoring system that can interpret a JSON file.</description></item><item><title>Resticprofile configuration reference</title><link>https://creativeprojects.github.io/resticprofile/reference/index.html</link><pubDate>Mon, 19 Aug 2024 21:04:06 +0000</pubDate><guid>https://creativeprojects.github.io/resticprofile/reference/index.html</guid><description> Note The configuration file reference is generated from resticprofile’s data model and restic’s manual pages.
Section global Section Profile backup cache cat check copy diff dump find forget init key key-add key-list key-passwd key-remove list ls migrate mount prune rebuild-index recover repair repair-index repair-packs repair-snapshots restore retention rewrite snapshots stats tag unlock Nested Sections ScheduleBaseConfig ScheduleConfig SendMonitoringHeader SendMonitoringSection StreamErrorSection Section Groups Value types JSON Schema</description></item><item><title>Contributions</title><link>https://creativeprojects.github.io/resticprofile/contributions/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://creativeprojects.github.io/resticprofile/contributions/index.html</guid><description>Please share your resticprofile recipes, fancy configuration files, or tips and tricks.
I have created a contributions section for that matter.
shell completion export status to grafana send email on systemd timer error get backup status information in zabbix scheduling inside a docker container backup stats in InfluxDB via Telegraf use a protected folder for configuration on Windows</description></item></channel></rss>